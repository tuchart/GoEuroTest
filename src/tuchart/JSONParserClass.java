package tuchart;import org.json.simple.JSONArray;import org.json.simple.JSONObject;import org.json.simple.parser.JSONParser;import org.json.simple.parser.ParseException;import java.io.*;import java.net.URL;import java.nio.charset.Charset;import java.util.ArrayList;import java.util.Iterator;import java.util.Set;/** * This class is responsible for getting JSON array from server * When this array comes to us, we will parse it and create .csv file */public class JSONParserClass {    private String cityName;    public String getCityName() {        return cityName;    }    public void setCityName(String cityName) {        this.cityName = cityName;    }    public void checkParams(String[] entryArgs) {        try {            String cityName = entryArgs[0];            this.setCityName(cityName);        }        catch (ArrayIndexOutOfBoundsException e) {            System.out.println("The name of the city wasn't typed"); //add logger here            e.printStackTrace();        }    }    private String readAll(Reader rd) throws IOException {        StringBuilder sb = new StringBuilder();        int cp;        while ((cp = rd.read()) != -1) {            sb.append((char) cp);        }        return sb.toString();    }    public JSONArray getJSONs(String url, String cityName) throws IOException, ParseException{        InputStream is = new URL(url + cityName).openStream();        try {            BufferedReader br = new BufferedReader(new InputStreamReader(is, Charset.forName("UTF-8")));            String jsonText = readAll(br);            JSONArray jsonArray = (JSONArray) new JSONParser().parse(jsonText);            return jsonArray;        }        finally {            is.close();        }    }        public void createCSV(JSONArray jsonArray, ArrayList<String> fieldsToPrint) {        try {            FileWriter filew = new FileWriter("result.csv");            for(String field: fieldsToPrint) {                filew.append(field);                if (fieldsToPrint.indexOf(field) != fieldsToPrint.size() - 1) {                    filew.append(',');                }                else {                    filew.append('\n');                }            }            for (int i = 0; i < jsonArray.size(); i++) {                JSONObject jsonObject = (JSONObject) jsonArray.get(i);                //System.out.println((jsonObject.get("geo_position")).getClass().toString().equals("class org.json.simple.JSONObject"));                //System.out.println(jsonObject.size());                for(String field: fieldsToPrint) {                    if (jsonObject.containsKey(field)) {                        filew.append(jsonObject.get(field).toString());                        if (fieldsToPrint.indexOf(field) != fieldsToPrint.size() - 1) {                            filew.append(',');                        } else {                            filew.append('\n');                        }                    }                    else {                        for(Iterator iterator = jsonObject.keySet().iterator(); iterator.hasNext();) {                            String key = (String) iterator.next();                            if (jsonObject.get(key) instanceof JSONObject) {                                JSONObject helperObj = (JSONObject) jsonObject.get(key);                                if (helperObj.containsKey(field)) {                                    filew.append(helperObj.get(field).toString());                                    if (fieldsToPrint.indexOf(field) != fieldsToPrint.size() - 1) {                                        filew.append(',');                                    } else {                                        filew.append('\n');                                    }                                }                            }                        }                    }                }            }            filew.flush();            filew.close();        }        catch (Exception e) {            e.printStackTrace();        }    }}